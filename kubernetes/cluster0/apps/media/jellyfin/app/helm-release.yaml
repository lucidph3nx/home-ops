---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  dependsOn:
  - name: longhorn
    namespace: longhorn-system
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.1.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    defaultPodOptions:
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    controllers:
      main:
        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.10.7
            env:
              TZ: "${TIMEZONE}"
              JELLYFIN_CACHE_DIR: /config/cache
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 1000Mi
              limits:
                gpu.intel.com/i915: 1
    service:
      app:
        controller: main
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"]
        parentRefs:
          - name: default-gateway
            namespace: kube-system
            sectionName: https
    # ingress:
    #   main:
    #     annotations:
    #       traefik.ingress.kubernetes.io/router.entrypoints: websecure
    #       external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_PUBLIC_DOMAIN}"
    #     hosts:
    #       - host: &host "{{ .Release.Name }}.${SECRET_PUBLIC_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               identifier: app
    #               port: http
    persistence:
      config:
        existingClaim: pvc-jellyfin
        advancedMounts:
          main:
            app:
              - path: /config
      movies:
        type: nfs
        server: "${NAS0_IP}"
        path: /volume1/Films
        advancedMounts:
          main:
            app:
              - path: /movies
      tv:
        type: nfs
        server: "${NAS0_IP}"
        path: /volume1/TV-Series
        advancedMounts:
          main:
            app:
              - path: /tv
      transcode:
        type: emptyDir
        advancedMounts:
          main:
            app:
              - path: /transcode
