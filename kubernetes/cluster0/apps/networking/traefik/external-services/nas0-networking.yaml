---
apiVersion: v1
kind: Service
metadata:
  name: nas0
  namespace: networking
spec:
  # type: ExternalName
  ports:
  - name: http
    port: 80
    targetPort: 5000
  # externalName: "${NAS0_IP}"

---
apiVersion: discovery.k8s.io/v1
kind: EndpointSlice
metadata:
  name: nas0
  namespace: networking
  labels:
    kubernetes.io/service-name: nas0
    endpointslice.kubernetes.io/managed-by: cluster-admins
addressType: IPv4
endpoints:
- addresses:
  - "${NAS0_IP}"
  conditions:
    ready: true
  ports:
  - name: http
    port: 5000

---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: nas0-externalroute
#   namespace: networking
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_PUBLIC_DOMAIN}"
#     external-dns/is-public: "true"
# spec:
#   ingressClassName: traefik
#   rules:
#     - host: nas0.${SECRET_PUBLIC_DOMAIN}
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: nas0-externalname
#                 port:
#                   number: 5000
#
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: nas0-httproute
  namespace: networking
spec:
  parentRefs:
    - group: gateway.networking.k8s.io
      kind: Gateway
      name: traefik-gateway
      namespace: networking
      sectionName: websecure
  hostnames: ["nas0.${SECRET_PUBLIC_DOMAIN}"]
  rules:
  - backendRefs:
      - group: ""
        kind: Service
        name: nas0
        namespace: networking
        port: 80
    matches:
    - path:
        type: PathPrefix
        value: /
