---
version: "3"

vars:
  PROJECT_DIR:
    sh: "git rev-parse --show-toplevel"
  CLUSTER_DIR: "{{.PROJECT_DIR}}/cluster"
  ANSIBLE_DIR: "{{.PROJECT_DIR}}/ansible"
  PYTHON_BIN: python3
  PATH: "{{.PROJECT_DIR}}/.venv/bin:$PATH"
  VIRTUAL_ENV: "{{.PROJECT_DIR}}/.venv"
  ANSIBLE_COLLECTIONS_PATH: "{{.PROJECT_DIR}}/.venv/galaxy"
  ANSIBLE_ROLES_PATH: "{{.PROJECT_DIR}}/.venv/galaxy/ansible_roles"
  ANSIBLE_VARS_ENABLED: "host_group_vars,community.sops.sops"

dotenv: [".config.env"]

includes:
  cluster: .taskfiles/ClusterTasks.yaml
  terraform: .taskfiles/TerraformTasks.yaml
  ansible: .taskfiles/AnisbleTasks.yaml
  sops: .taskfiles/SopsTasks.yaml

tasks:
  default: go-task -l
  deps:
    desc: Create a Python virtual env and install required packages
    cmds:
      - "{{.PYTHON_BIN}} -m venv {{.PROJECT_DIR}}/.venv"
      - .venv/bin/python3 -m pip install --upgrade pip setuptools wheel
      - .venv/bin/python3 -m pip install --upgrade --requirement "{{.PROJECT_DIR}}/requirements.txt"
      - .venv/bin/ansible-galaxy install --role-file "{{.PROJECT_DIR}}/requirements.yaml" --force
