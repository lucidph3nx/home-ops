
apiVersion: v1
kind: Service
metadata:
  name: h0-proxy-externalname
  namespace: networking
spec:
  type: ExternalName
  ports:
  - name: https
    port: 8006
  externalName: "${HOST0_IP}"

---

apiVersion: v1
kind: Service
metadata:
  name: h1-proxy-externalname
  namespace: networking
spec:
  type: ExternalName
  ports:
  - name: https
    port: 8006
  externalName: "${HOST1_IP}"

---

apiVersion: v1
kind: Service
metadata:
  name: h2-proxy-externalname
  namespace: networking
spec:
  type: ExternalName
  ports:
  - name: https
    port: 8006
  externalName: "${HOST2_IP}"

---
# the equivelant of insecureskipverify for just this ingress
apiVersion: traefik.containo.us/v1alpha1
kind: ServersTransport
metadata:
  name: proxmox-skip-verify-transport
  namespace: networking
spec:
  serverName: "proxmox.${SECRET_PUBLIC_DOMAIN}"
  insecureSkipVerify: true

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxmox-externalroute
  namespace: networking
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: "Host(`proxmox.${SECRET_PUBLIC_DOMAIN}`)"
      kind: Rule
      middlewares:
        - name: chain-authelia-auth
          namespace: auth-system
      services:
        - name: h0-proxy-externalname
          namespace: networking
          kind: Service
          port: 8006
          passHostHeader: true
          scheme: https
          serversTransport: proxmox-skip-verify-transport
        - name: h1-proxy-externalname
          namespace: networking
          kind: Service
          port: 8006
          passHostHeader: true
          scheme: https
          serversTransport: proxmox-skip-verify-transport
        - name: h2-proxy-externalname
          namespace: networking
          kind: Service
          port: 8006
          passHostHeader: true
          scheme: https
          serversTransport: proxmox-skip-verify-transport
  tls:
    secretName: "${SECRET_PUBLIC_DOMAIN/./-}-tls"
